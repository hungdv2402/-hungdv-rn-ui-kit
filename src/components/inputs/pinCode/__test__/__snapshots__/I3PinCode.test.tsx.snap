// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders I3PinCode correctly should render I3PinCode with basic properties 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "flexDirection": "row",
      "gap": 10,
      "justifyContent": "center",
    }
  }
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#fff",
          "borderColor": "#D3D3D4",
          "borderRadius": 5,
          "borderWidth": 1,
          "height": 60,
          "justifyContent": "center",
          "width": 50,
        },
        undefined,
      ]
    }
  >
    <Text
      style={
        {
          "color": "#212127",
          "fontSize": 20,
          "fontWeight": "600",
        }
      }
    >
      8
    </Text>
  </View>
  <View
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#fff",
          "borderColor": "#D3D3D4",
          "borderRadius": 5,
          "borderWidth": 1,
          "height": 60,
          "justifyContent": "center",
          "width": 50,
        },
        undefined,
      ]
    }
  >
    <Text
      style={
        {
          "color": "#212127",
          "fontSize": 20,
          "fontWeight": "600",
        }
      }
    >
      8
    </Text>
  </View>
  <View
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#fff",
          "borderColor": "#D3D3D4",
          "borderRadius": 5,
          "borderWidth": 1,
          "height": 60,
          "justifyContent": "center",
          "width": 50,
        },
        undefined,
      ]
    }
  >
    <Text
      style={
        {
          "color": "#212127",
          "fontSize": 20,
          "fontWeight": "600",
        }
      }
    >
      8
    </Text>
  </View>
  <View
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#fff",
          "borderColor": "#D3D3D4",
          "borderRadius": 5,
          "borderWidth": 1,
          "height": 60,
          "justifyContent": "center",
          "width": 50,
        },
        undefined,
      ]
    }
  >
    <Text
      style={
        {
          "color": "#212127",
          "fontSize": 20,
          "fontWeight": "600",
        }
      }
    >
      8
    </Text>
  </View>
  <TextInput
    caretHidden={true}
    keyboardType="numeric"
    onChangeText={[Function]}
    style={
      {
        "display": "none",
      }
    }
    value="8888"
  />
</View>
`;

exports[`renders I3PinCode correctly should render I3PinCode with custom errors 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "flexDirection": "row",
      "gap": 10,
      "justifyContent": "center",
    }
  }
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#fff",
          "borderColor": "#D3D3D4",
          "borderRadius": 5,
          "borderWidth": 1,
          "height": 60,
          "justifyContent": "center",
          "width": 50,
        },
        {
          "borderColor": "red",
          "borderWidth": 2,
        },
      ]
    }
  >
    <Text
      style={
        {
          "color": "#212127",
          "fontSize": 20,
          "fontWeight": "600",
        }
      }
    />
  </View>
  <View
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#fff",
          "borderColor": "#D3D3D4",
          "borderRadius": 5,
          "borderWidth": 1,
          "height": 60,
          "justifyContent": "center",
          "width": 50,
        },
        {
          "borderColor": "red",
          "borderWidth": 2,
        },
      ]
    }
  >
    <Text
      style={
        {
          "color": "#212127",
          "fontSize": 20,
          "fontWeight": "600",
        }
      }
    />
  </View>
  <View
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#fff",
          "borderColor": "#D3D3D4",
          "borderRadius": 5,
          "borderWidth": 1,
          "height": 60,
          "justifyContent": "center",
          "width": 50,
        },
        {
          "borderColor": "red",
          "borderWidth": 2,
        },
      ]
    }
  >
    <Text
      style={
        {
          "color": "#212127",
          "fontSize": 20,
          "fontWeight": "600",
        }
      }
    />
  </View>
  <View
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#fff",
          "borderColor": "#D3D3D4",
          "borderRadius": 5,
          "borderWidth": 1,
          "height": 60,
          "justifyContent": "center",
          "width": 50,
        },
        {
          "borderColor": "red",
          "borderWidth": 2,
        },
      ]
    }
  >
    <Text
      style={
        {
          "color": "#212127",
          "fontSize": 20,
          "fontWeight": "600",
        }
      }
    />
  </View>
  <TextInput
    caretHidden={true}
    keyboardType="numeric"
    onChangeText={[Function]}
    style={
      {
        "display": "none",
      }
    }
    value=""
  />
</View>
`;

exports[`renders I3PinCode correctly should render I3PinCode with custom quantity 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "flexDirection": "row",
      "gap": 10,
      "justifyContent": "center",
    }
  }
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#fff",
          "borderColor": "#D3D3D4",
          "borderRadius": 5,
          "borderWidth": 1,
          "height": 60,
          "justifyContent": "center",
          "width": 50,
        },
        undefined,
      ]
    }
  >
    <Text
      style={
        {
          "color": "#212127",
          "fontSize": 20,
          "fontWeight": "600",
        }
      }
    >
      8
    </Text>
  </View>
  <View
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#fff",
          "borderColor": "#D3D3D4",
          "borderRadius": 5,
          "borderWidth": 1,
          "height": 60,
          "justifyContent": "center",
          "width": 50,
        },
        undefined,
      ]
    }
  >
    <Text
      style={
        {
          "color": "#212127",
          "fontSize": 20,
          "fontWeight": "600",
        }
      }
    >
      8
    </Text>
  </View>
  <View
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#fff",
          "borderColor": "#D3D3D4",
          "borderRadius": 5,
          "borderWidth": 1,
          "height": 60,
          "justifyContent": "center",
          "width": 50,
        },
        undefined,
      ]
    }
  >
    <Text
      style={
        {
          "color": "#212127",
          "fontSize": 20,
          "fontWeight": "600",
        }
      }
    >
      8
    </Text>
  </View>
  <View
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#fff",
          "borderColor": "#D3D3D4",
          "borderRadius": 5,
          "borderWidth": 1,
          "height": 60,
          "justifyContent": "center",
          "width": 50,
        },
        undefined,
      ]
    }
  >
    <Text
      style={
        {
          "color": "#212127",
          "fontSize": 20,
          "fontWeight": "600",
        }
      }
    >
      8
    </Text>
  </View>
  <View
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#fff",
          "borderColor": "#D3D3D4",
          "borderRadius": 5,
          "borderWidth": 1,
          "height": 60,
          "justifyContent": "center",
          "width": 50,
        },
        undefined,
      ]
    }
  >
    <Text
      style={
        {
          "color": "#212127",
          "fontSize": 20,
          "fontWeight": "600",
        }
      }
    >
      8
    </Text>
  </View>
  <View
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "#fff",
          "borderColor": "#D3D3D4",
          "borderRadius": 5,
          "borderWidth": 1,
          "height": 60,
          "justifyContent": "center",
          "width": 50,
        },
        undefined,
      ]
    }
  >
    <Text
      style={
        {
          "color": "#212127",
          "fontSize": 20,
          "fontWeight": "600",
        }
      }
    >
      8
    </Text>
  </View>
  <TextInput
    caretHidden={true}
    keyboardType="numeric"
    onChangeText={[Function]}
    style={
      {
        "display": "none",
      }
    }
    value="888888"
  />
</View>
`;
